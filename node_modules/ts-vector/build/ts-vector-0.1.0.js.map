{
  "version": 3,
  "sources": [
    "node_modules/browser-pack/_prelude.js",
    "src/bundle.ts",
    "src/utils/helpers.ts",
    "src/utils/operations.ts",
    "src/value-array.ts",
    "src/value-array/basic.ts",
    "src/value-array/counts.ts",
    "src/value-array/indexing.ts",
    "src/value-array/padding.ts",
    "src/vector.ts",
    "src/vector/cumulative.ts",
    "src/vector/dot-product.ts",
    "src/vector/histogram.ts",
    "src/vector/math.ts",
    "src/vector/normalize.ts",
    "src/vector/operations.ts",
    "src/vector/quantiles.ts",
    "src/vector/range.ts",
    "src/vector/statistics.ts",
    "src/vector/stats.ts"
  ],
  "names": [],
  "mappings": "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",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "import Vector from './vector';\n\nexport = Vector; // export default is not translated to \"module.exports=\", and browserify requires the latter for standalone output\n",
    "\nexport function forEachNonMissing(array: ArrayLike<number>, callback: (value: number, index: number) => void) {\n    for (let i = 0; i < array.length; i++) {\n        let value = array[i];\n        if (value !== undefined && value !== null && !Number.isNaN(value)) {\n            if (typeof value !== 'number') throwNotNumerError(value, i);\n            callback.call(null, value, i);\n        }\n    }\n}\n\nexport function forEachNumber(array: ArrayLike<number>, callback: (value: number, index: number) => void) {\n    for (let i = 0; i < array.length; i++) {\n        let value = getNumberValue(array, i);\n        callback.call(null, value, i);\n    }\n}\n\nexport function forEachNumberPair(v1: ArrayLike<number>, v2: ArrayLike<number>, callback: (x1: number, x2: number, index: number) => void) {\n    checkLength(v1, v2);\n\n    for (let i = 0; i < v1.length; i++) {\n        let x1 = getNumberValue(v1, i);\n        let x2 = getNumberValue(v2, i);\n        callback.call(null, x1, x2, i);\n    }\n}\n\nexport function getNumberValue(array: ArrayLike<number>, index: number) {\n    let value = array[index];\n    if (value === null) { value = undefined; } // +null is 0, but +undefined is NaN, this way both of them will be NaN\n    if (value !== undefined && typeof value !== 'number') throwNotNumerError(value, index);\n    return value;\n}\n\nfunction throwNotNumerError(value: any, index: number) {\n    throw new Error('Vector contains non-numeric value ' + value + ' at index ' + index + ' of type ' + typeof value);\n}\n\nfunction checkLength(v1: ArrayLike<number>, v2: ArrayLike<number>) {\n    if (v1.length !== v2.length) {\n        throw new Error('vector size difference in vector operation:' + v1.length + ', ' + v2.length);\n    }\n}\n",
    "\nexport const add = (x: number, y: number) => x + y;\nexport const subtract = (x: number, y: number) => x - y;\nexport const multiply = (x: number, y: number) => x * y;\nexport const divide = (x: number, y: number) => x / y;\nexport const pow = (x: number, y: number) => x ** y;\n\nexport const and = (x: number, y: number) => x && y;\nexport const or = (x: number, y: number) => x || y;\n\nexport const  moreThan = (x: number, y: number) => x > y ? 1 : 0;\nexport const  lessThan = (x: number, y: number) => x < y ? 1 : 0;\nexport const  moreOrEqualThan = (x: number, y: number) => x >= y ? 1 : 0;\nexport const  lessOrEqualThan = (x: number, y: number) => x <= y ? 1 : 0;\n\nexport const  equal = (x: number, y: number) => x === y ? 1 : 0;\nexport const  notEqual = (x: number, y: number) => x !== y ? 1 : 0;\n",
    "import { range, permute } from './value-array/indexing';\nimport { count, counts, unique } from './value-array/counts';\nimport { equals, copy, shuffle, transform, each, fillBy } from './value-array/basic';\nimport { padStart, padEnd } from './value-array/padding'\n\n\nexport default class ValueArray<T> extends Array<T> {\n\n    get first() { return this.length > 0 ? this[0] : undefined; }\n    get last() { return this.length > 0 ? this[this.length - 1] : undefined; }\n\n    head(n?: number): this { return <this>this.slice(0, n || 10); }\n    tail(n?: number): this { return <this>this.slice(-(n || 10)); }\n\n    range(start?: number, end?: number, step?: number): this { return <this>range(this, start, end, step); }\n    permute(indexes: ArrayLike<number>): this { return <this>permute(this, indexes); }\n\n    shuffle(): this { return <this>shuffle(this); }\n\n    transform(callback: (item: T, index: number, array: this) => T): this { return <this>transform(this, callback) };\n    each(callback: (item: T, index: number, array: this) => void): this { return <this>each(this, callback); }\n    fillBy(fn: (index: number, array: this) => T): this { return <this>fillBy(this, fn); }\n\n    padStart(length: number, value?: T): this { return <this>padStart(this, length, value); }\n    padEnd(length: number, value?: T): this { return <this>padEnd(this, length, value); }\n\n    equals(a: ArrayLike<T>): boolean { return equals(this, a); }\n    copy(): this { return <this>copy(this); }\n\n    toSet(): Set<T> { return new Set(this); }\n\n    unique(): this { return <this>unique(this); }\n\n    counts(): Map<T, number> { return counts(this); }\n\n    count(param: T): number;\n    count(param: (item: T, index: number, array: this) => boolean): number;\n    count(param: any): number {\n        return count(this, param);\n    }\n}\n",
    "\nexport function equals<T>(a: ArrayLike<T>, b: ArrayLike<T>): boolean {\n    if (a.length !== b.length) return false;\n    for (let i = 0; i < a.length; i++) {\n        if (a[i] !== b[i]) return false;\n    }\n    return true;\n}\n\nexport function copy(v: ArrayLike<any>): ArrayLike<any> {\n    let result: ArrayLike<any> = (<any>v.constructor).from({ length: v.length });\n    for (let i = 0; i < v.length; i++) {\n        result[i] = v[i];\n    }\n    return result;\n}\n\nexport function shuffle(v: ArrayLike<any>): ArrayLike<any> {\n    for (let i = v.length; i > 0; i -= 1) {\n        let j = Math.floor(Math.random() * i);\n        let x = v[i - 1];\n        v[i - 1] = v[j];\n        v[j] = x;\n    }\n    return v;\n}\n\nexport function transform<T>(v: ArrayLike<T>, callback: (item: T, index: number, array: ArrayLike<T>) => T): ArrayLike<T> {\n    for (let i = 0; i < v.length; i++) {\n        v[i] = callback.call(null, v[i], i, v);\n    }\n    return v;\n}\n\nexport function each<T>(v: ArrayLike<T>, callback: (item: T, index: number, array: ArrayLike<T>) => void): ArrayLike<T> {\n    for (let i = 0; i < v.length; i++) {\n        callback.call(null, v[i], i, v);\n    }\n    return v;\n}\n\nexport function fillBy<T>(v: ArrayLike<T>, fn: (index: number, array: ArrayLike<T>) => T): ArrayLike<T> {\n    for (let i = 0; i < v.length; i++) {\n        v[i] = fn.call(null, i, v);\n    }\n    return v;\n}\n",
    "\nexport function count<T>(v: ArrayLike<T>, param: T): number;\nexport function count<T>(v: ArrayLike<T>, param: (item: T, index: number, array: ArrayLike<T>) => boolean): number;\nexport function count<T>(v: ArrayLike<T>, param: any): number {\n    let count = 0;\n    for (let i = 0; i < v.length; i++) {\n        if (typeof param === 'function') {\n            if (param.call(null, v[i], i, v)) count++;\n        } else if (param === v[i] || (Number.isNaN(<any>param) && Number.isNaN(<any>v[i]))) {\n            count++;\n        }\n    }\n    return count;\n}\n\nexport function counts<T>(v: ArrayLike<T>): Map<T, number> {\n    let counts = new Map<T, number>();\n    for (let i = 0; i < v.length; i++) {\n        let x = v[i];\n        counts.set(x, (counts.get(x) || 0) + 1);\n    }\n    return counts;\n}\n\nexport function unique<T>(v: ArrayLike<T>): ArrayLike<T> {\n    let set = new Set<T>();\n    let result: any = new (<any>v).constructor();\n\n    for (let i = 0; i < v.length; i++) {\n        let x = v[i];\n        if (!set.has(x)) {\n            result.push(x);\n            set.add(x);\n        }\n    }\n    return result;\n}\n",
    "\nexport function range(v: ArrayLike<any>, start?: number, end?: number, step?: number): ArrayLike<any> {\n    step = step == null ? 1 : step;\n    start = start == null ? 0 : (start < 0 ? v.length + start : start);\n    end = end == null ? v.length : (end < 0 ? v.length + end : end);\n\n    let result: ArrayLike<any> = (<any>v.constructor).from({ length: Math.ceil((end - start) / step) });\n    let j = 0;\n    if (step > 0) {\n        for (let i = start; i < end; i += step) {\n            result[j] = v[i];\n            j++;\n        }\n    } else {\n        for (let i = end - 1; i >= start; i += step) {\n            result[j] = v[i];\n            j++;\n        }\n    }\n    return result;\n}\n\nexport function permute(v: ArrayLike<any>, indexes: ArrayLike<number>): ArrayLike<any> {\n    let result: ArrayLike<any> = (<any>v.constructor).from({ length: indexes.length });\n\n    for (let i = 0; i < indexes.length; i++) {\n        if (indexes[i] >= 0) {\n            result[i] = v[indexes[i]];\n        } else {\n            result[i] = v[v.length + indexes[i]];\n        }\n    }\n    return result;\n}\n",
    "\nexport function padStart<T>(v: Array<T>, length: number, value?: T): Array<T> {\n    while (v.length < length) {\n        v.unshift(value);\n    }\n    return v;\n}\n\nexport function padEnd<T>(v: Array<T>, length: number, value?: T): Array<T> {\n    while (v.length < length) {\n        v.push(value);\n    }\n    return v;\n}\n",
    "import ValueArray from './value-array';\nimport { min, max, extent, mean, variance, std, mad, argmin, argmax, mode } from './vector/statistics';\nimport { sum, sumOfSquares, magnitude, product } from './vector/math';\nimport {\n    add, subtract, multiply, divide, pow,\n    and, or,\n    lessThan, moreThan, lessOrEqualThan, moreOrEqualThan,\n    equal, notEqual\n} from './utils/operations';\nimport { vectorOperation, vectorOperation2 } from './vector/operations';\nimport { dotProduct } from './vector/dot-product';\nimport { median, quantiles } from './vector/quantiles';\nimport { histogram, Histogram, HistogramOptions } from './vector/histogram';\nimport { cumsum, diff } from './vector/cumulative';\nimport { normalizeStats, normalizeProba, normalizeVector } from './vector/normalize';\nimport { stats, NumberArrayStats } from './vector/stats';\nimport { range, linspace, logspace } from './vector/range';\n\n\nexport default class Vector extends ValueArray<number> {\n\n    // Statistics:\n\n    min(): number { return min(this); }\n    max(): number { return max(this); }\n    extent(): [number, number] { return extent(this); }\n    mean(): number { return mean(this); }\n    variance(): number { return variance(this); }\n    std(): number { return std(this); }\n    mad(): number { return mad(this); }\n    mode(): number { return mode(this); }\n\n    argmin(): number { return argmin(this); }\n    argmax(): number { return argmax(this); }\n\n    median(): number { return median(this); }\n    quantiles(q: number): this { return <this>quantiles(this, q); }\n\n    histogram(options?: HistogramOptions): Histogram<this> { return histogram(this, options); }\n\n    normalizeStats(): this { normalizeStats(this); return this; }\n    normalizeProba(): this { normalizeProba(this); return this; }\n    normalizeVector(): this { normalizeVector(this); return this; }\n\n    stats(): NumberArrayStats { return stats(this); }\n\n    // math:\n\n    sum(): number { return sum(this); }\n    sumOfSquares(): number { return sumOfSquares(this); }\n    magnitude(): number { return magnitude(this); }\n    product(): number { return product(this); }\n\n    cumsum(): this { return cumsum(this); }\n    diff(): this { return diff(this); }\n\n    // override:\n\n    sort(): this { return <this>super.sort((a, b) => a - b); }\n    sortDesc(): this { return <this>super.sort((a, b) => b - a); }\n    some(callback?: (value: number, index: number, array: this) => boolean): boolean {\n        return callback ? super.some(callback) : super.some(x => !!x);\n    }\n    every(callback?: (value: number, index: number, array: this) => boolean): boolean {\n        return callback ? super.every(callback) : super.every(x => !!x);\n    }\n\n    // \"operator overloading\":\n\n    // - pairwise math:\n\n    add(param: number): this;\n    add(param: ArrayLike<number>): this;\n    add(param: any): this {\n        return vectorOperation(this, param, false, add);\n    }\n\n    addSelf(param: number): this;\n    addSelf(param: ArrayLike<number>): this;\n    addSelf(param: any): this {\n        return vectorOperation(this, param, true, add);\n    }\n\n    subtract(param: number): this;\n    subtract(param: ArrayLike<number>): this;\n    subtract(param: any): this {\n        return vectorOperation(this, param, false, subtract);\n    }\n\n    subtractSelf(param: number): this;\n    subtractSelf(param: ArrayLike<number>): this;\n    subtractSelf(param: any): this {\n        return vectorOperation(this, param, true, subtract);\n    }\n\n    multiply(param: number): this;\n    multiply(param: ArrayLike<number>): this;\n    multiply(param: any): this {\n        return vectorOperation(this, param, false, multiply);\n    }\n\n    multiplySelf(param: number): this;\n    multiplySelf(param: ArrayLike<number>): this;\n    multiplySelf(param: any): this {\n        return vectorOperation(this, param, true, multiply);\n    }\n\n    divide(param: number): this;\n    divide(param: ArrayLike<number>): this;\n    divide(param: any): this {\n        return vectorOperation(this, param, false, divide);\n    }\n\n    divideSelf(param: number): this;\n    divideSelf(param: ArrayLike<number>): this;\n    divideSelf(param: any): this {\n        return vectorOperation(this, param, true, divide);\n    }\n\n    pow(param: number): this;\n    pow(param: ArrayLike<number>): this;\n    pow(param: any): this {\n        return vectorOperation(this, param, false, pow);\n    }\n\n    powSelf(param: number): this;\n    powSelf(param: ArrayLike<number>): this;\n    powSelf(param: any): this {\n        return vectorOperation(this, param, true, pow);\n    }\n\n    // - logical and/or:\n\n    and(v: ArrayLike<number>): this { return vectorOperation(this, v, false, and); }\n    or(v: ArrayLike<number>): this { return vectorOperation(this, v, false, or); }\n\n    // - comparisons:\n\n    lessThan(param: number): this;\n    lessThan(param: ArrayLike<number>): this;\n    lessThan(param: any): this {\n        return vectorOperation(this, param, false, lessThan);\n    }\n\n    moreThan(param: number): this;\n    moreThan(param: ArrayLike<number>): this;\n    moreThan(param: any): this {\n        return vectorOperation(this, param, false, moreThan);\n    }\n\n    lessOrEqualThan(param: number): this;\n    lessOrEqualThan(param: ArrayLike<number>): this;\n    lessOrEqualThan(param: any): this {\n        return vectorOperation(this, param, false, lessOrEqualThan);\n    }\n\n    moreOrEqualThan(param: number): this;\n    moreOrEqualThan(param: ArrayLike<number>): this;\n    moreOrEqualThan(param: any): this {\n        return vectorOperation(this, param, false, moreOrEqualThan);\n    }\n\n    // - equality:\n\n    equal(param: number): this;\n    equal(param: ArrayLike<number>): this;\n    equal(param: any): this {\n        return vectorOperation(this, param, false, equal);\n    }\n\n    notEqual(param: number): this;\n    notEqual(param: ArrayLike<number>): this;\n    notEqual(param: any): this {\n        return vectorOperation(this, param, false, notEqual);\n    }\n\n    // - matrix product:\n\n    dot(v: ArrayLike<number>): number { return dotProduct(this, v); }\n\n    // static \"operator overloading\"\n\n    static add(v1: number, v2: number): number;\n    static add(v1: number, v2: ArrayLike<number>): Vector;\n    static add(v1: ArrayLike<number>, v2: number): Vector;\n    static add(v1: ArrayLike<number>, v2: ArrayLike<number>): Vector;\n    static add(v1: any, v2: any): any {\n        return vectorOperation2(v1, v2, this, add);\n    }\n\n    static subtract(v1: number, v2: number): number;\n    static subtract(v1: number, v2: ArrayLike<number>): Vector;\n    static subtract(v1: ArrayLike<number>, v2: number): Vector;\n    static subtract(v1: ArrayLike<number>, v2: ArrayLike<number>): Vector;\n    static subtract(v1: any, v2: any): any {\n        return vectorOperation2(v1, v2, this, subtract);\n    }\n\n    static multiply(v1: number, v2: number): number;\n    static multiply(v1: number, v2: ArrayLike<number>): Vector;\n    static multiply(v1: ArrayLike<number>, v2: number): Vector;\n    static multiply(v1: ArrayLike<number>, v2: ArrayLike<number>): Vector;\n    static multiply(v1: any, v2: any): any {\n        return vectorOperation2(v1, v2, this, multiply);\n    }\n\n    static divide(v1: number, v2: number): number;\n    static divide(v1: number, v2: ArrayLike<number>): Vector;\n    static divide(v1: ArrayLike<number>, v2: number): Vector;\n    static divide(v1: ArrayLike<number>, v2: ArrayLike<number>): Vector;\n    static divide(v1: any, v2: any): any {\n        return vectorOperation2(v1, v2, this, divide);\n    }\n\n    static pow(v1: number, v2: number): number;\n    static pow(v1: number, v2: ArrayLike<number>): Vector;\n    static pow(v1: ArrayLike<number>, v2: number): Vector;\n    static pow(v1: ArrayLike<number>, v2: ArrayLike<number>): Vector;\n    static pow(v1: any, v2: any): any {\n        return vectorOperation2(v1, v2, this, pow);\n    }\n\n    static and(v1: number, v2: number): number;\n    static and(v1: number, v2: ArrayLike<number>): Vector;\n    static and(v1: ArrayLike<number>, v2: number): Vector;\n    static and(v1: ArrayLike<number>, v2: ArrayLike<number>): Vector;\n    static and(v1: any, v2: any): any {\n        return vectorOperation2(v1, v2, this, and);\n    }\n\n    static or(v1: number, v2: number): number;\n    static or(v1: number, v2: ArrayLike<number>): Vector;\n    static or(v1: ArrayLike<number>, v2: number): Vector;\n    static or(v1: ArrayLike<number>, v2: ArrayLike<number>): Vector;\n    static or(v1: any, v2: any): any {\n        return vectorOperation2(v1, v2, this, or);\n    }\n\n    static lessThan(v1: number, v2: number): number;\n    static lessThan(v1: number, v2: ArrayLike<number>): Vector;\n    static lessThan(v1: ArrayLike<number>, v2: number): Vector;\n    static lessThan(v1: ArrayLike<number>, v2: ArrayLike<number>): Vector;\n    static lessThan(v1: any, v2: any): any {\n        return vectorOperation2(v1, v2, this, lessThan);\n    }\n\n    static moreThan(v1: number, v2: number): number;\n    static moreThan(v1: number, v2: ArrayLike<number>): Vector;\n    static moreThan(v1: ArrayLike<number>, v2: number): Vector;\n    static moreThan(v1: ArrayLike<number>, v2: ArrayLike<number>): Vector;\n    static moreThan(v1: any, v2: any): any {\n        return vectorOperation2(v1, v2, this, moreThan);\n    }\n\n    static lessOrEqualThan(v1: number, v2: number): number;\n    static lessOrEqualThan(v1: number, v2: ArrayLike<number>): Vector;\n    static lessOrEqualThan(v1: ArrayLike<number>, v2: number): Vector;\n    static lessOrEqualThan(v1: ArrayLike<number>, v2: ArrayLike<number>): Vector;\n    static lessOrEqualThan(v1: any, v2: any): any {\n        return vectorOperation2(v1, v2, this, lessOrEqualThan);\n    }\n\n    static moreOrEqualThan(v1: number, v2: number): number;\n    static moreOrEqualThan(v1: number, v2: ArrayLike<number>): Vector;\n    static moreOrEqualThan(v1: ArrayLike<number>, v2: number): Vector;\n    static moreOrEqualThan(v1: ArrayLike<number>, v2: ArrayLike<number>): Vector;\n    static moreOrEqualThan(v1: any, v2: any): any {\n        return vectorOperation2(v1, v2, this, moreOrEqualThan);\n    }\n\n    static equal(v1: number, v2: number): number;\n    static equal(v1: number, v2: ArrayLike<number>): Vector;\n    static equal(v1: ArrayLike<number>, v2: number): Vector;\n    static equal(v1: ArrayLike<number>, v2: ArrayLike<number>): Vector;\n    static equal(v1: any, v2: any): any {\n        return vectorOperation2(v1, v2, this, equal);\n    }\n\n    static notEqual(v1: number, v2: number): number;\n    static notEqual(v1: number, v2: ArrayLike<number>): Vector;\n    static notEqual(v1: ArrayLike<number>, v2: number): Vector;\n    static notEqual(v1: ArrayLike<number>, v2: ArrayLike<number>): Vector;\n    static notEqual(v1: any, v2: any): any {\n        return vectorOperation2(v1, v2, this, notEqual);\n    }\n\n    // static constructors:\n\n    static range(start: number, stop?: number, step?: number): Vector {\n        return <Vector>range(start, stop, step, this);\n    }\n\n    static linspace(start: number, stop: number, num?: number, excludeEnd?: boolean): Vector {\n        return <Vector>linspace(start, stop, num, excludeEnd, this);\n    }\n\n    static logspace(start: number, stop: number, num?: number, excludeEnd?: boolean, base?: number): Vector {\n        return <Vector>logspace(start, stop, num, excludeEnd, base, this);\n    }\n}\n",
    "import { forEachNumber, getNumberValue } from '../utils/helpers';\n\n\nfunction _cumsum(v: ArrayLike<number>, out: ArrayLike<number>) {\n    forEachNumber(v, (x, i) => {\n        out[i] = x + (i == 0 ? 0 : out[i-1]);\n    });\n}\n\nfunction _diff(v: ArrayLike<number>, out: ArrayLike<number>) {\n    let prev = getNumberValue(v, 0);\n    for (let i = 1; i < v.length; i++) {\n        let x = getNumberValue(v, i);\n        out[i - 1] = x - prev;\n        prev = x;\n    }\n}\n\nexport function cumsum<V extends ArrayLike<number>>(v: V): V {\n    let out: V = (<any>v.constructor).from({ length: v.length });\n    _cumsum(v, out);\n    return out;\n}\n\nexport function diff<V extends ArrayLike<number>>(v: V): V {\n    let out: V = (<any>v.constructor).from({ length: v.length - 1 });\n    _diff(v, out);\n    return out;\n}\n",
    "import { forEachNumberPair } from '../utils/helpers';\n\n\nexport function dotProduct(v1: ArrayLike<number>, v2: ArrayLike<number>): number {\n    let y = 0;\n    forEachNumberPair(v1, v2, (x1, x2) => {\n        y += x1 * x2;\n    });\n    return y;\n}\n",
    "import { extent } from './statistics';\nimport { sum } from './math';\nimport { forEachNonMissing } from '../utils/helpers';\n\n\nexport interface HistogramOptions {\n    min?: number,\n    max?: number,\n    bins?: number,\n    binWidth?: number,\n    probability?: boolean\n}\n\nexport interface Histogram<V extends ArrayLike<number>>{\n    x: V,\n    y: V,\n    dx: number\n}\n\nexport function histogram<V extends ArrayLike<number>>(v: V, options: HistogramOptions): Histogram<V> {\n    options = options || {};\n    let min = options.min;\n    let max = options.max;\n\n    if (min == null || max == null) {\n        let ext = extent(v);\n        if (min == null) min = ext[0];\n        if (max == null) max = ext[1];\n    }\n\n    let bins = options.bins;\n    if (options.binWidth) {\n        bins = Math.ceil((max - min) / options.binWidth);\n    }\n    if (bins == null) {\n        bins = Math.floor(Math.sqrt(v.length));\n    }\n\n    let dx = (max - min) / bins;\n\n    let x: V = (<any>v.constructor).from({ length: bins });\n    let y: V = (<any>v.constructor).from({ length: bins });\n\n    for (let i = 0; i < bins; i++) {\n        x[i] = min + i * dx;\n        y[i] = 0;\n    }\n\n    let count = 0;\n    forEachNonMissing(v, vi => {\n        if (vi >= min && vi < max) {\n            y[Math.floor((vi - min) / dx)]++;\n        } else if (vi === max) {\n            y[y.length - 1]++;\n        }\n        count++;\n    });\n\n    if (options.probability) {\n        for (let i = 0; i < y.length; i++) {\n            y[i] /= count;\n        }\n    }\n\n    return { x, y, dx };\n}\n",
    "import { forEachNumber } from '../utils/helpers';\n\n\nexport function sum(array: ArrayLike<number>): number {\n    let sum = 0;\n    forEachNumber(array, x => {\n        sum += x;\n    });\n    return sum;\n}\n\nexport function sumOfSquares(array: ArrayLike<number>): number {\n    let sum = 0;\n    forEachNumber(array, x => {\n        sum += x*x;\n    });\n    return sum;\n}\n\nexport function magnitude(array: ArrayLike<number>): number {\n    return Math.sqrt(sumOfSquares(array));\n}\n\nexport function product(array: ArrayLike<number>): number {\n    let product = 0;\n    forEachNumber(array, x => {\n        product *= x;\n    });\n    return product;\n}\n",
    "import { forEachNumber } from '../utils/helpers';\nimport { sum, magnitude } from './math';\nimport { mean, std } from './statistics';\n\n\nexport function normalizeProba(v: ArrayLike<number>) {\n    let s = sum(v);\n    forEachNumber(v, (x, i) => {\n        v[i] /= s;\n    });\n}\n\nexport function normalizeVector(v: ArrayLike<number>) {\n    let s = magnitude(v);\n    forEachNumber(v, (x, i) => {\n        v[i] /= s;\n    });\n}\n\nexport function normalizeStats(v: ArrayLike<number>) {\n    let m = mean(v);\n    let o = std(v);\n    forEachNumber(v, (x, i) => {\n        v[i] = (x - m) / o;\n    });\n}\n",
    "import { forEachNumber, forEachNumberPair } from '../utils/helpers';\n\n\nfunction scalarOperation(v: ArrayLike<number>, s: number, output: ArrayLike<number>,\n                         operation: (x: number, y: number) => number) {\n    forEachNumber(v, (x, i) => {\n        output[i] = operation(x, s);\n    });\n}\n\nfunction scalarOperation2(s: number, v: ArrayLike<number>, output: ArrayLike<number>,\n                         operation: (x: number, y: number) => number) {\n    forEachNumber(v, (x, i) => {\n        output[i] = operation(s, x);\n    });\n}\n\nfunction binaryOperation(v1: ArrayLike<number>, v2: ArrayLike<number>, output: ArrayLike<number>,\n                         operation: (x: number, y: number) => number) {\n    forEachNumberPair(v1, v2, (x1, x2, i) => {\n        output[i] = operation(x1, x2);\n    });\n}\n\n\nexport function vectorOperation<V extends Array<number>>(v: V, param: number, modifySelf: boolean, operation: (x: number, y: number) => number): V;\nexport function vectorOperation<V extends Array<number>>(v: V, param: ArrayLike<number>, modifySelf: boolean, operation: (x: number, y: number) => number): V;\nexport function vectorOperation<V extends Array<number>>(v: V, param: any, modifySelf: boolean, operation: (x: number, y: number) => number): V {\n    let output = modifySelf ? v : (<any>v.constructor).from({ length: v.length });\n\n    if (typeof param === 'number') {\n        scalarOperation(v, param, output, operation);\n    } else if (param.length !== undefined) {\n        binaryOperation(v, param, output, operation);\n    } else {\n        throw new Error('Can\\'t perform vector operation on object with invalid type:' + param + ', ' + typeof param);\n    }\n    return output;\n}\n\n\nexport function vectorOperation2(v1: number, v2: number, type: any, operation: (x: number, y: number) => number): number;\nexport function vectorOperation2(v1: number, v2: ArrayLike<number>, type: any, operation: (x: number, y: number) => number): ArrayLike<number>;\nexport function vectorOperation2(v1: ArrayLike<number>, v2: number, type: any, operation: (x: number, y: number) => number): ArrayLike<number>;\nexport function vectorOperation2(v1: ArrayLike<number>, v2: ArrayLike<number>, type: any, operation: (x: number, y: number) => number): ArrayLike<number>;\nexport function vectorOperation2(v1: any, v2: any, type: any, operation: (x: number, y: number) => number): any {\n\n    if (typeof v1 === 'number' && typeof v2 === 'number') {\n        return operation(v1, v2);\n    }\n\n    let output = type.from({ length: v1.length || v2.length });\n\n    if (typeof v1 === 'number' && v2.length !== undefined) {\n        scalarOperation2(v1, v2, output, operation);\n    } else if (v1.length !== undefined && typeof v2 === 'number') {\n        scalarOperation(v1, v2, output, operation);\n    } else if (v1.length !== undefined && v2.length !== undefined) {\n        binaryOperation(v1, v2, output, operation);\n    } else {\n        throw new Error('Can\\'t perform vector operation on objects with invalid type: ' + typeof v1 + ', ' + typeof v2);\n    }\n    return output;\n}\n",
    "import { forEachNonMissing } from \"../utils/helpers\";\n\n// R-7 algorithm that both Excel and d3 use\n\nfunction quantile(v: ArrayLike<number>, p: number) {\n    let h = (v.length - 1) * p + 1;\n    let h_ = Math.floor(h);\n    let s = h - h_;\n    let x = v[h_ - 1];\n    return s ? x + s * (v[h_] - x) : x;\n}\n\nfunction getSortedNumbers(v: Array<number>) {\n    let values: number[] = [];\n    forEachNonMissing(v, x => { values.push(x); });\n    return values.sort((a, b) => a - b);\n}\n\nexport function quantiles(v: Array<number>, q: number) {\n    let sorted = getSortedNumbers(v);\n\n    let result: number[] = (<any>v.constructor).from({ length: q + 1 });\n    for (let i = 0; i <= q; i++) {\n        result[i] = quantile(sorted, i/q);\n    }\n    return result;\n}\n\nexport function median(v: Array<number>) {\n    if (v.length === 0) return;\n    let sorted = getSortedNumbers(v);\n    return quantile(sorted, 0.5);\n}\n",
    "\nexport function range(start: number, stop: number, step: number, type: any): ArrayLike<number> {\n    if (stop == null && step == null) {\n        stop = start;\n        start = null;\n    }\n    start = start == null ? 0 : start;\n    step = step == null ? (start <= stop ? 1 : -1) : step;\n    if ((stop - start) / step < 0) throw new Error('Infinite loop');\n\n    let v: ArrayLike<number> = type.from({ length: Math.ceil((stop - start)/ step) });\n    let x: number;\n    let i = 0;\n\n    if (start < stop) {\n        while ((x = start + i * step) < stop) {\n            v[i++] = x;\n        }\n    } else {\n        while ((x = start + i * step) > stop) {\n            v[i++] = x;\n        }\n    }\n    return v;\n}\n\nexport function linspace(start: number, stop: number, num: number, excludeEnd: boolean, type: any): ArrayLike<number> {\n    num = num == null ? 100 : num;\n\n    let step = (stop - start) / (excludeEnd ? num : num - 1);\n    let v: ArrayLike<number> = type.from({ length: num });\n    for (let i = 0; i < num; i++) {\n        v[i] = start + i * step;\n    }\n    return v;\n}\n\nexport function logspace(start: number, stop: number, num: number, excludeEnd: boolean, base: number, type: any): ArrayLike<number> {\n    num = num == null ? 100 : num;\n    base = base == null ? 10: base;\n\n    let step = (stop - start) / (excludeEnd ? num : num - 1);\n    let v: ArrayLike<number> = type.from({ length: num });\n    for (let i = 0; i < num; i++) {\n        v[i] = Math.pow(base, start + i * step);\n    }\n    return v;\n}\n",
    "import { forEachNonMissing } from '../utils/helpers';\n\n\nexport function min(array: ArrayLike<number>): number {\n    let min: number;\n    forEachNonMissing(array, x => {\n        if (min === undefined || x < min) {\n            min = x;\n        }\n    });\n    return min;\n}\n\nexport function argmin(array: ArrayLike<number>): number {\n    let min: number;\n    let index: number;\n    forEachNonMissing(array, (x, i) => {\n        if (min === undefined || x < min) {\n            min = x;\n            index = i;\n        }\n    });\n    return index;\n}\n\nexport function max(array: ArrayLike<number>): number {\n    let max: number;\n    forEachNonMissing(array, x => {\n        if (max === undefined || x > max) {\n            max = x;\n        }\n    });\n    return max;\n}\n\nexport function argmax(array: ArrayLike<number>): number {\n    let max: number;\n    let index: number;\n    forEachNonMissing(array, (x, i) => {\n        if (max === undefined || x > max) {\n            max = x;\n            index = i;\n        }\n    });\n    return index;\n}\n\nexport function extent(array: ArrayLike<number>): [number, number] {\n    let min: number;\n    let max: number;\n    forEachNonMissing(array, x => {\n        if (max === undefined || x > max) {\n            max = x;\n        }\n        if (min === undefined || x < min) {\n            min = x;\n        }\n    });\n    return [min, max];\n}\n\nexport function mean(array: ArrayLike<number>): number {\n    let sum = 0;\n    let n = 0;\n    forEachNonMissing(array, x => {\n        sum += x;\n        n++;\n    });\n    return n === 0 ? undefined : sum / n;\n}\n\n// https://en.wikipedia.org/wiki/Algorithms_for_calculating_variance#Online_algorithm\nexport function variance(array: ArrayLike<number>): number {\n    let n = 0;\n    let mean = 0;\n    let m2 = 0;\n    forEachNonMissing(array, x => {\n        n++;\n        let delta = x - mean;\n        mean += delta/n;\n        m2 += delta*(x - mean);\n    });\n    return n > 1 ? (m2 / (n - 1)) : undefined;\n}\n\nexport function std(array: ArrayLike<number>): number {\n    let squared = variance(array);\n    return squared == null ? squared : Math.sqrt(squared);\n}\n\nexport function mad(array: ArrayLike<number>): number {\n    let avg = mean(array);\n    let sum = 0;\n    let n = 0;\n    forEachNonMissing(array, x => {\n        sum += Math.abs(avg - x);\n        n++;\n    });\n    return n === 0 ? undefined : sum / n;\n}\n\nexport function mode(array: ArrayLike<number>): number {\n    let counts: { [key: string]: number } = {};\n    forEachNonMissing(array, x => {\n        if (!counts[x]) {\n            counts[x] = 1;\n        } else {\n            counts[x]++;\n        }\n    });\n\n    let maxValue: string;\n    let maxCount = 0;\n    Object.keys(counts).forEach(key => {\n        if (counts[key] > maxCount) {\n            maxCount = counts[key];\n            maxValue = key;\n        }\n    });\n    return maxValue ? Number(maxValue) : undefined;\n}\n",
    "import { min, max, mean, variance, std, mad, mode } from './statistics';\nimport { sum } from './math';\nimport { median, quantiles } from './quantiles';\n\n\nexport interface NumberArrayStats {\n    length: number,\n\n    invalidCount: number,\n    invalidCounts: { undefined: number, 'null': number, NaN: number, Infinity: number, '-Infinity': number },\n\n    min: number,\n    max: number,\n\n    mean: number,\n    median: number,\n    mode: number,\n\n    std: number,\n    variance: number,\n    mad: number,\n\n    deciles: number[],\n\n    sum: number\n}\n\nexport function stats(v: Array<number>): NumberArrayStats {\n    let invalids = countInvalid(v);\n\n    return {\n        length: v.length,\n        invalidCount: invalids.count,\n        invalidCounts: invalids.counts,\n        min: min(v),\n        max: max(v),\n        mean: mean(v),\n        median: median(v),\n        mode: mode(v),\n        std: std(v),\n        variance: variance(v),\n        mad: mad(v),\n        deciles: quantiles(v, 10),\n        sum: sum(v)\n    };\n}\n\nfunction countInvalid(v: ArrayLike<number>) {\n    let counts = {\n        undefined: 0,\n        'null': 0,\n        NaN: 0,\n        Infinity: 0,\n        '-Infinity': 0\n    };\n    let count = 0;\n\n    for (let i = 0; i < v.length; i++) {\n        if ((<any>counts)[v[i]] !== undefined) {\n            (<any>counts)[v[i]]++;\n            count++;\n        }\n    }\n\n    return { counts, count };\n}\n"
  ]
}